{"version":3,"sources":["src/src/js/DeviceOrientationControls.js"],"names":["THREE","DeviceOrientationControls","object","scope","rotation","reorder","enabled","deviceOrientation","screenOrientation","alphaOffset","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","window","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","Math","sqrt","quaternion","alpha","beta","gamma","orient","set","setFromEuler","multiply","setFromAxisAngle","connect","addEventListener","disconnect","removeEventListener","update","device","degToRad","dispose"],"mappings":"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","file":"DeviceOrientationControls.map","sourceRoot":"..","sourcesContent":["/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function ( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( 'YXZ' );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alphaOffset = 0; // radians\n\n\tvar onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function () {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function () {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t};\n\n\t}();\n\n\tthis.connect = function () {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function () {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar device = scope.deviceOrientation;\n\n\t\tif ( device ) {\n\n\t\t\tvar alpha = device.alpha ? THREE.Math.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\n\n\t\t\tvar beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\n\n\t\t\tvar gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\n\n\t\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t\t}\n\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tscope.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n"]}